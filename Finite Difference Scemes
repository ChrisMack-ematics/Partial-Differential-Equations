clc
clear all

%grid density
lambda = 0.8;
h = 1/40;
k = h*lambda;

%time interval
t = 0;
tf = 2.4;
T = t:k:tf;
N = length(T);

%space interval
L = -1;
R = 3;
x = L:h:R;
M = length(x);

%defining zero matrix
U = zeros(M,1);

for j = 1:M
    if (x(j) >= -0.5) && (x(j)<=0.5)
        U(j) = (cos(pi*x(j))).^2;
    end
    %  fprintf('%f, %f\n', U(j), x(j))
end

u_old = U;
u_new = U;

% For Lax-Fredrich Scheme
% for i = 2:N
%     
%     %     t = t + k; % use this code to keep track of time
%     u_new(1) = 0; % BC
%     
%     
%     for j = 2:M-1
%         %u_new(j) = (u_old(j+1) + u_old(j-1))/2 - lambda*(u_old(j+1)- u_old(j-1))/2;
%         %fprintf('%f, %f\n', u_new(j), x(j)) %use this code to print
%         %         out the values of u_new  
%     end
%     
%     u_new(end) = u_new(end-1); % BC
%     
%     u_old = u_new;
%     
%     plot(x,u_new,'-^') %plotting the u_new values at time t
%     pause(0.1) % Experiment with removing the pause (or increasing its value) to 
% see the effect
%     
%     xlabel('x'), ylabel('U'),
% end

% For 1.3.2 Forward T Back S
% for i = 2:N
%     
%     %     t = t + k; % use this code to keep track of time
%     u_new(1) = 0; % BC
%     
%     
%     for j = 2:M
%         u_new(j) = u_old(j) - lambda*(u_old(j) - u_old(j-1));
%         %fprintf('%f, %f\n', u_new(j), x(j)) %use this code to print
%         %         out the values of u_new  
%     end
%     
%     %u_new(end) = u_new(end-1); % BC
%     
%     u_old = u_new;
%     
%     plot(x,u_new,'-^') %plotting the u_new values at time t
%     pause(0.1) % Experiment with removing the pause (or increasing its value) to 
% see the effect
%     
%     xlabel('x'), ylabel('U'),
% end


% For 1.3.3 Forward T Central S
for i = 2:2
    
    %     t = t + k; % use this code to keep track of time
    u_new(1) = 0; % BC
    
    
    for j = 2:2
        u_new(j) = 0.5*lambda*(u_old(j-1)-u_old(j+1)) + u_old(j);
        %fprintf('%f, %f\n', u_new(j), x(j)) %use this code to print
        %         out the values of u_new  
    end
    
    u_new(end) = u_new(end-1); % BC
    
    u_old = u_new;
    
    plot(x,u_new,'-^') %plotting the u_new values at time t
    pause(0.1) % Experiment with removing the pause (or increasing its value) to 
see the effect
    
    xlabel('x'), ylabel('U'),
end


%Plotting the final u_new solution with the exact solution
figure(2)
plot(x,u_new,'-^'), hold on
% exact solution at time t=2.4
t2 = 2.4;
Uexact = zeros(M,1);
for j = 1:M
    if (x(j) >= -0.5+t2) && (x(j)<=0.5+t2)
        Uexact(j) = (cos(pi*(x(j)-t2))).^2;    
    end
end
plot(x,Uexact,'k')
xlabel('x')
ylabel('u(x)')
%ylim([-1 1])
title('Forward-time Central-space with h = 1/40, \lambda = 0.8')
legend('approximate','exact','location', 'northwest')
